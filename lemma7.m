x=randn(1000,1);
x(randperm(1000,950))=0;
data=[];
sigman=0.1;
mcv=50;
m=150;
N=1000;
A=randn(m,N)/sqrt(m);
n = sqrt(sum(A.^2,1)); 
A= bsxfun(@rdivide,A,n);
Acv=randn(mcv,N)/sqrt(m);
n = sqrt(sum(Acv.^2,1)); 
Acv= bsxfun(@rdivide,Acv,n);
Acv=Acv*sqrt(mcv/m);
y=A*x;
ycv=Acv*x;
p=10;
q=20;
[xcap,xp,xq]=OMPCV_for7(A,Acv,y,ycv,70,p,q);
dxpg=[x-xp;sigman];
dxqg=[x-xq;sigman];
rho=dxpg'*dxqg/(norm(dxpg)*norm(dxqg));
mu=mcv*(norm(dxpg)^2-norm(dxqg)^2)/m;
sigma=sqrt(2*mcv*(norm(dxpg)^4+norm(dxqg)^4-2*rho^2*norm(dxpg)^2*norm(dxqg)^2))/m;
for i=[0:1:1000]
    i
    Acv=randn(mcv,N)/sqrt(m);
    n = sqrt(sum(Acv.^2,1)); 
    Acv= bsxfun(@rdivide,Acv,n);
    Acv=Acv*sqrt(mcv/m);
    noise=sigman*randn(mcv,1)/sqrt(m);
    ecvp=norm(Acv*(x-xp)+noise)^2;
    ecvq=norm(Acv*(x-xq)+noise)^2;
    data=[data; (ecvp-ecvq)];
end
pde=fitdist(data,'Normal');
gaus=@(x) exp(-(x-mu)^2/(2*sigma^2))/(sqrt(2*pi)*sigma);
xvals=[mu-3*sigma:6*sigma/100:mu+3*sigma]';
pd=pdf(pde,xvals);
theor=arrayfun(gaus,xvals);
plot(xvals,pd,xvals,theor);
legend({'experimental','theoritical'});
